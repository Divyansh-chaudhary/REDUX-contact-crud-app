[{"C:\\newapp\\src\\index.js":"1","C:\\newapp\\src\\App.js":"2","C:\\newapp\\src\\store.js":"3","C:\\newapp\\src\\components\\Navbar.js":"4","C:\\newapp\\src\\actions\\contactActions.js":"5","C:\\newapp\\src\\reducers\\index.js":"6","C:\\newapp\\src\\reducers\\contactReducers.js":"7","C:\\newapp\\src\\components\\contact\\CreateContact.js":"8","C:\\newapp\\src\\components\\contact\\EditContact.js":"9","C:\\newapp\\src\\components\\contact\\Contacts.js":"10","C:\\newapp\\src\\components\\contact\\Contact.js":"11","C:\\newapp\\src\\constants\\constantType.js":"12"},{"size":177,"mtime":1610543962739,"results":"13","hashOfConfig":"14"},{"size":1013,"mtime":1610597175740,"results":"15","hashOfConfig":"14"},{"size":230,"mtime":1610554705371,"results":"16","hashOfConfig":"14"},{"size":476,"mtime":1610550185377,"results":"17","hashOfConfig":"14"},{"size":667,"mtime":1610600564145,"results":"18","hashOfConfig":"14"},{"size":166,"mtime":1610555319387,"results":"19","hashOfConfig":"14"},{"size":1824,"mtime":1610600607303,"results":"20","hashOfConfig":"14"},{"size":2181,"mtime":1610554952627,"results":"21","hashOfConfig":"14"},{"size":2661,"mtime":1610596231308,"results":"22","hashOfConfig":"14"},{"size":1464,"mtime":1610600732343,"results":"23","hashOfConfig":"14"},{"size":1430,"mtime":1610599290726,"results":"24","hashOfConfig":"14"},{"size":286,"mtime":1610599461779,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"kcjvt6",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\newapp\\src\\index.js",[],["52","53"],"C:\\newapp\\src\\App.js",[],"C:\\newapp\\src\\store.js",[],"C:\\newapp\\src\\components\\Navbar.js",[],"C:\\newapp\\src\\actions\\contactActions.js",["54"],"C:\\newapp\\src\\reducers\\index.js",[],"C:\\newapp\\src\\reducers\\contactReducers.js",["55","56"],"C:\\newapp\\src\\components\\contact\\CreateContact.js",[],"C:\\newapp\\src\\components\\contact\\EditContact.js",["57"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getContact, updateContact } from '../../actions/contactActions'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nexport default function EditContact() {\r\n   const history = useHistory(),\r\n      dispatch = useDispatch(),\r\n      [input, setInput] = useState({\r\n         name: \"\",\r\n         email: \"\",\r\n         phone: \"\"\r\n      }),\r\n      { name, email, phone } = input,\r\n      { id } = useParams();\r\n\r\n   const inputEvent = e => setInput({ ...input, [e.target.name]: e.target.value });\r\n\r\n   const submitForm = e => {\r\n      e.preventDefault();\r\n      const updated_contact = Object.assign(contact, input);\r\n      dispatch(updateContact(updated_contact));\r\n      history.push(\"/\");\r\n   }\r\n\r\n   const contact = useSelector((state) => state.contactState.contact);\r\n\r\n   useEffect(() => {\r\n      if (contact != null) {\r\n         setInput({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n         });\r\n      }\r\n\r\n      dispatch(getContact(id));\r\n   }, [contact]);\r\n\r\n   return (\r\n      <section className=\"card border-0 shadow\">\r\n         <div className=\"card-header\">\r\n            Add a Contact\r\n         </div>\r\n         <div className=\"card-body\">\r\n            <form onSubmit={submitForm}>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     className=\"form-control\"\r\n                     placeholder=\"Enter Your Name\"\r\n                     value={name}\r\n                     name=\"name\"\r\n                     onChange={inputEvent}\r\n                  />\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     className=\"form-control\"\r\n                     placeholder=\"Enter Your Email\"\r\n                     value={email}\r\n                     name=\"email\"\r\n                     onChange={inputEvent}\r\n                  />\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     className=\"form-control\"\r\n                     placeholder=\"Enter Your Phone\"\r\n                     value={phone}\r\n                     name=\"phone\"\r\n                     onChange={inputEvent}\r\n                  />\r\n               </div>\r\n               <button className=\"btn btn-warning\" type=\"submit\">\r\n                  Update Contact\r\n                  </button>\r\n            </form>\r\n         </div>\r\n      </section>\r\n   )\r\n}\r\n","C:\\newapp\\src\\components\\contact\\Contacts.js",["58"],"C:\\newapp\\src\\components\\contact\\Contact.js",[],"C:\\newapp\\src\\constants\\constantType.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":87,"nodeType":"65","messageId":"66","endLine":1,"endColumn":100},{"ruleId":"67","severity":1,"message":"68","line":34,"column":64,"nodeType":"69","messageId":"70","endLine":34,"endColumn":66},{"ruleId":"67","severity":1,"message":"71","line":56,"column":32,"nodeType":"69","messageId":"70","endLine":56,"endColumn":34},{"ruleId":"72","severity":1,"message":"73","line":38,"column":7,"nodeType":"74","endLine":38,"endColumn":16,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":17,"column":5,"nodeType":"74","endLine":17,"endColumn":16,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'CLEAR_CONTACT' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["80"],"React Hook useEffect has missing dependencies: 'contacts' and 'dispatch'. Either include them or remove the dependency array.",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [contact, dispatch, id]",{"range":"86","text":"87"},"Update the dependencies array to be: [contacts, dispatch, selectAll]",{"range":"88","text":"89"},[1132,1141],"[contact, dispatch, id]",[594,605],"[contacts, dispatch, selectAll]"]